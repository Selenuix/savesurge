/**
 * Yapily API
 *
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiResponseError } from '../model/models';
import { ApiResponseOfCreateHostedPaymentRequest } from '../model/models';
import { ApiResponseOfCreateHostedPaymentRequestLink } from '../model/models';
import { ApiResponseOfCreateHostedVRPConsentRequest } from '../model/models';
import { ApiResponseOfCreateHostedVRPPaymentRequest } from '../model/models';
import { ApiResponseOfFundsConfirmationResponse } from '../model/models';
import { ApiResponseOfGetHostedPaymentRequest } from '../model/models';
import { ApiResponseOfGetHostedVRPConsentRequest } from '../model/models';
import { ApiResponseOfGetHostedVRPConsentsRequest } from '../model/models';
import { ApiResponseOfGetHostedVRPPaymentRequest } from '../model/models';
import { ApiResponseOfRevokeHostedVRPConsentRequest } from '../model/models';
import { CreateHostedPaymentRequest } from '../model/models';
import { CreateHostedPaymentRequestLink } from '../model/models';
import { CreateHostedVRPConsentRequest } from '../model/models';
import { CreateHostedVRPPaymentRequest } from '../model/models';
import { FundsConfirmationRequest } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface HostedPaymentPagesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Hosted payment request
     * Used to initiate a payment request using Yapily Hosted Pages.
     * @param createHostedPaymentRequest 
     */
    createHostedPaymentRequest(createHostedPaymentRequest: CreateHostedPaymentRequest, extraHttpRequestParams?: any): Observable<ApiResponseOfCreateHostedPaymentRequest>;

    /**
     * Create Pay By Link
     * Used to created a long lived payment request for Pay By Link
     * @param createHostedPaymentRequestLink 
     */
    createHostedPaymentRequestLink(createHostedPaymentRequestLink: CreateHostedPaymentRequestLink, extraHttpRequestParams?: any): Observable<ApiResponseOfCreateHostedPaymentRequestLink>;

    /**
     * Create VRP Consent
     * Used to initiate a VRP consent / mandate request through Yapily Hosted Pages
     * @param subApplication __Mandatory__. The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     * @param createHostedVRPConsentRequest 
     */
    createHostedVRPConsentRequest(subApplication: string, createHostedVRPConsentRequest: CreateHostedVRPConsentRequest, extraHttpRequestParams?: any): Observable<ApiResponseOfCreateHostedVRPConsentRequest>;

    /**
     * Check Funds Availability
     * Confirms whether there are available funds on the Payer account to execute a Variable Recurring Payment after obtaining the user\&#39;s authorisation. &lt;br&gt;&lt;br&gt;Features:&lt;ul&gt;&lt;li&gt;&#x60;VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION&#x60;&lt;/li&gt;&lt;/ul&gt;
     * @param consentRequestId Unique Identifier of the Consent Request
     * @param consentToken __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param fundsConfirmationRequest 
     * @param subApplication The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    createHostedVrpFundsConfirmation(consentRequestId: string, consentToken: string, fundsConfirmationRequest: FundsConfirmationRequest, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfFundsConfirmationResponse>;

    /**
     * Create VRP Payment
     * Creates a Variable Recurring Payment
     * @param consentRequestId Unique Identifier of the Consent Request
     * @param consentToken __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param createHostedVRPPaymentRequest 
     * @param subApplication The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    createHostedVrpPayment(consentRequestId: string, consentToken: string, createHostedVRPPaymentRequest: CreateHostedVRPPaymentRequest, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfCreateHostedVRPPaymentRequest>;

    /**
     * Get Hosted payment request
     * Used to get details of a payment request
     * @param paymentRequestId Unique Identifier of the payment request
     */
    getHostedPaymentRequest(paymentRequestId: string, extraHttpRequestParams?: any): Observable<ApiResponseOfGetHostedPaymentRequest>;

    /**
     * Get Hosted VRP Consent Requests
     * Used to get all VRP consent requests initiated through Yapily Hosted Pages
     * @param subApplication __Mandatory__. The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    getHostedVRPConsentRequests(subApplication: string, extraHttpRequestParams?: any): Observable<ApiResponseOfGetHostedVRPConsentsRequest>;

    /**
     * Get VRP payment
     * Used to get details of a VRP Payment
     * @param consentRequestId Unique Identifier of the Consent Request
     * @param paymentId Unique Identifier of the Consent Request
     * @param subApplication The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    getHostedVRPPaymentRequest(consentRequestId: string, paymentId: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfGetHostedVRPPaymentRequest>;

    /**
     * Get Hosted VRP Consent Request
     * Used to get details of a VRP Consent Request
     * @param consentRequestId Unique Identifier of the Consent Request
     * @param subApplication The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    getHostedVrpConsentRequest(consentRequestId: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfGetHostedVRPConsentRequest>;

    /**
     * Revoke Hosted VRP Consent Request
     * Revoke Hosted VRP Consent Request
     * @param consentRequestId Unique Identifier of the Consent Request
     * @param subApplication The unique identifier of the sub application the request is being submitted on behalf of (e.g. an underlying merchant)
     */
    revokeHostedConsentRequest(consentRequestId: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfRevokeHostedVRPConsentRequest>;

}
