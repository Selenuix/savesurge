/**
 * Yapily API
 *
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AccountApiListResponse } from '../model/models';
import { ApiListResponseOfAccountStatement } from '../model/models';
import { ApiListResponseOfBeneficiary } from '../model/models';
import { ApiListResponseOfDirectDebitResponse } from '../model/models';
import { ApiListResponseOfPaymentResponse } from '../model/models';
import { ApiListResponseOfRealTimeTransaction } from '../model/models';
import { ApiListResponseOfTransaction } from '../model/models';
import { ApiResponseError } from '../model/models';
import { ApiResponseOfAccount } from '../model/models';
import { ApiResponseOfAccountStatement } from '../model/models';
import { ApiResponseOfBalances } from '../model/models';
import { ApiResponseOfIdentity } from '../model/models';
import { SortEnum } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface FinancialDataServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Get Account
     * Returns the account and balance information for a user\&#39;s specified account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getAccount(accountId: string, consent: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfAccount>;

    /**
     * Get Account Balances
     * Returns the balance for the end user associated with the presented consent token.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_BALANCES&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getAccountBalances(accountId: string, consent: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfBalances>;

    /**
     * Get Account Direct Debits
     * Returns the list of direct debits for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_DIRECT_DEBITS&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.
     */
    getAccountDirectDebits(accountId: string, consent: string, subApplication?: string, limit?: number, extraHttpRequestParams?: any): Observable<ApiListResponseOfDirectDebitResponse>;

    /**
     * Get Account Periodic Payments
     * Returns the list of periodic payments (standing orders in the UK) for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_PERIODIC_PAYMENTS&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.
     */
    getAccountPeriodicPayments(accountId: string, consent: string, subApplication?: string, limit?: number, extraHttpRequestParams?: any): Observable<ApiListResponseOfPaymentResponse>;

    /**
     * Get Account Scheduled Payments
     * Returns the list of scheduled payments for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_SCHEDULED_PAYMENTS&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.
     */
    getAccountScheduledPayments(accountId: string, consent: string, subApplication?: string, limit?: number, extraHttpRequestParams?: any): Observable<ApiListResponseOfPaymentResponse>;

    /**
     * Get Accounts
     * Returns all accounts and balances for the end user associated with the presented consent token.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNTS&#x60;
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getAccounts(consent: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, extraHttpRequestParams?: any): Observable<AccountApiListResponse>;

    /**
     * Get Account Beneficiaries
     * Returns all the beneficiaries of a user\&#39;s account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_BENEFICIARIES&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getBeneficiaries(accountId: string, consent: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiListResponseOfBeneficiary>;

    /**
     * Get Identity
     * Returns the identity information for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;IDENTITY&#x60;
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getIdentity(consent: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfIdentity>;

    /**
     * Get Real Time Account Transactions
     * Used to get the account transactions for an account in real time with cursor pagination&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_TRANSACTIONS&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/knowledge/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param from __Optional__. Returned transactions will be on or after this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ).
     * @param before __Optional__. Returned transactions will be on or before this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ).
     * @param cursor __Optional__. The cursor token supplied by a previous call. The cursor represents a location in the data set.
     */
    getRealTimeTransactions(accountId: string, consent: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, from?: string, before?: string, cursor?: string, extraHttpRequestParams?: any): Observable<ApiListResponseOfRealTimeTransaction>;

    /**
     * Get Account Statement
     * Returns a statement for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_STATEMENT&#x60;
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param statementId __Mandatory__. The statement Id of the statement file.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getStatement(consent: string, accountId: string, statementId: string, subApplication?: string, extraHttpRequestParams?: any): Observable<ApiResponseOfAccountStatement>;

    /**
     * Get Account Statement File
     * Returns a PDF file of a statement for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_STATEMENT_FILE&#x60;
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param statementId __Mandatory__. The statement Id of the statement file.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getStatementFile(consent: string, accountId: string, statementId: string, subApplication?: string, extraHttpRequestParams?: any): Observable<Blob>;

    /**
     * Get Account Statements
     * Returns the list of statements for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_STATEMENTS&#x60;
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param from __Optional__. Returned transactions will be on or after this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ). 
     * @param before __Optional__. Returned transactions will be on or before this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ).
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.
     * @param sort __Optional__. Sort transaction records by date ascending with \&#39;date\&#39; or descending with \&#39;-date\&#39;. The default sort order is descending
     * @param offset __Optional__. The number of transaction records to be skipped. Used primarily with paginated results.
     */
    getStatements(consent: string, accountId: string, subApplication?: string, from?: string, before?: string, limit?: number, sort?: SortEnum, offset?: number, extraHttpRequestParams?: any): Observable<ApiListResponseOfAccountStatement>;

    /**
     * Get Account Transactions
     * Returns the account transactions for an account.&lt;br&gt;&lt;br&gt;Feature: &#x60;ACCOUNT_TRANSACTIONS&#x60;
     * @param accountId __Mandatory__. The account Id of the user\&#39;s bank account.
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param from __Optional__. Returned transactions will be on or after this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ). 
     * @param before __Optional__. Returned transactions will be on or before this date (yyyy-MM-dd\&#39;T\&#39;HH:mm:ss.SSSZ).
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 1 and 1000.
     * @param sort __Optional__. Sort transaction records by date ascending with \&#39;date\&#39; or descending with \&#39;-date\&#39;. The default sort order is descending
     * @param offset __Optional__. The number of transaction records to be skipped. Used primarily with paginated results.
     * @param cursor __Optional__. This property is not currently in use.
     */
    getTransactions(accountId: string, consent: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, from?: string, before?: string, limit?: number, sort?: SortEnum, offset?: number, cursor?: string, extraHttpRequestParams?: any): Observable<ApiListResponseOfTransaction>;

}
