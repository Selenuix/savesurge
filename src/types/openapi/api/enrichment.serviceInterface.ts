/**
 * Yapily API
 *
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiErrorResponseV2 } from '../model/models';
import { GetAccountsTransactionsCategorised200Response } from '../model/models';
import { GetCategorisationAccountType200Response } from '../model/models';
import { PostAccountsAccountIdTransactionsCategorisation201Response } from '../model/models';
import { PostAccountsAccountIdTransactionsCategorisationRequest } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface EnrichmentServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Get Categorised Transactions
     * Retrieve a set of categorised transactions using a provided categorisation ID (__Note__: A categorisation ID will only be valid for 30 mins after a __transactions.categorisation.successful__ wedhook has be received)
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param accountId Unique identifier for account
     * @param categorisationId Unique identifier for transaction categorisation request
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param limit __Optional__. The maximum number of transaction records to be returned. Must be between 100 and 1000. If not specified will default to 100.
     * @param page __Optional__. The page number to be returned. If not specified will default to 1.
     */
    getAccountsTransactionsCategorised(consent: string, accountId: string, categorisationId: string, subApplication?: string, limit?: number, page?: number, extraHttpRequestParams?: any): Observable<GetAccountsTransactionsCategorised200Response>;

    /**
     * Get the list of all categories for a specific account type
     * Returns the list of categories that can be returned for a specific account type (consumer or business)
     * @param accountType type of bank account (consumer or business)
     * @param subApplication The sub-application ID to which event type is being subscribed to
     */
    getCategorisationAccountType(accountType: string, subApplication?: string, extraHttpRequestParams?: any): Observable<GetCategorisationAccountType200Response>;

    /**
     * Trigger transaction categorisation
     * Trigger categorisation for a specified set of transactions
     * @param consent __Mandatory__. The &#x60;consent-token&#x60; containing the user\&#39;s authorisation to make the request.
     * @param accountId Unique identifier for account
     * @param psuId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a personal account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuCorporateId __Conditional__. Represents the user\&#39;s login ID for the &#x60;Institution&#x60; to a business account. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param psuIpAddress __Conditional__. The IP address of the PSU. &lt;br&gt;&lt;br&gt;See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/) to see if this header is required.
     * @param subApplication The sub-application ID to which event type is being subscribed to
     * @param postAccountsAccountIdTransactionsCategorisationRequest 
     */
    postAccountsAccountIdTransactionsCategorisation(consent: string, accountId: string, psuId?: string, psuCorporateId?: string, psuIpAddress?: string, subApplication?: string, postAccountsAccountIdTransactionsCategorisationRequest?: PostAccountsAccountIdTransactionsCategorisationRequest, extraHttpRequestParams?: any): Observable<PostAccountsAccountIdTransactionsCategorisation201Response>;

}
