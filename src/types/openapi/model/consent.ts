/**
 * Yapily API
 *
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AuthorisationStatus } from './authorisationStatus';
import { FeatureEnum } from './featureEnum';


/**
 * Consent detailing the requested authorisation from a user to a specific `Institution`.
 */
export interface Consent { 
    /**
     * Unique identifier of the consent.
     */
    id?: string;
    userUuid?: string;
    /**
     * __Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.
     */
    applicationUserId?: string;
    referenceId?: string;
    /**
     * __Mandatory__. The `Institution` the authorisation request is sent to.
     */
    institutionId?: string;
    status?: AuthorisationStatus;
    /**
     * Date and time of when the consent was created.
     */
    createdAt?: string;
    /**
     * When performing a transaction query using the consent, this is the earliest date of transaction records that can be retrieved.
     */
    transactionFrom?: string;
    /**
     * When performing a transaction query using the consent, this is the latest date of transaction records that can be retrieved.
     */
    transactionTo?: string;
    /**
     * Date and time of when the authorisation will expire by. Reauthorisation will be needed to retain access.
     */
    expiresAt?: string;
    /** @deprecated */
    timeToExpireInMillis?: number;
    timeToExpire?: string;
    /**
     * The set of features that the consent will provide access to.
     */
    featureScope?: Set<FeatureEnum>;
    /**
     * Represents the authorisation to gain access to the requested features. Required to access account information or make a payment request.
     */
    consentToken?: string;
    /**
     * Correlation ID used with the `Institution` during the authorisation process.
     */
    state?: string;
    /**
     * Date and time of when the request was authorised by the Institution.
     */
    authorizedAt?: string;
    /**
     * The time that the PSU last confirmed access to their account information, either through full authentication with the institution, or through reconfirmation with the TPP.
     */
    lastConfirmedAt?: string;
    /**
     * The time by which the consent should be reconfirmed to ensure continued access to the account information.
     */
    reconfirmBy?: string;
    /**
     * Identification of the consent at the Institution.
     */
    institutionConsentId?: string;
    /**
     * Denotes whether the consent has been deleted on the institution side or not when a DELETE method is executed on a Yapily consent if that functionality is provided by the institution
     */
    isDeletedByInstitution?: boolean;
}
export namespace Consent {
}


