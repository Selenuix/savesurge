/**
 * Yapily API
 *
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PayerDetailsResponse } from './payerDetailsResponse';
import { HostedPaymentStatusDetails } from './hostedPaymentStatusDetails';
import { InstitutionIdentifiersResponse } from './institutionIdentifiersResponse';
import { HostedPaymentPhase } from './hostedPaymentPhase';
import { PaymentContextTypeResponse } from './paymentContextTypeResponse';
import { AmountDetailsResponse } from './amountDetailsResponse';
import { PayeeDetailsResponse } from './payeeDetailsResponse';
import { PaymentTypeResponse } from './paymentTypeResponse';


export interface HostedPayment { 
    /**
     * The Unique Identifier of the payment.
     */
    paymentId?: string;
    /**
     * The Unique Identifier of the payment created using Yapily hosted application.
     */
    hostedPaymentId?: string;
    /**
     * The Unique Identifier of the consent.
     */
    consentId?: string;
    institutionIdentifiers?: InstitutionIdentifiersResponse;
    /**
     * The phase reached by the payment and its timestamp.
     */
    phases?: Array<HostedPaymentPhase>;
    /**
     * Payment status based on latest HostedAuthPaymentPhase in phases. Value can be <ul> <li>PENDING  -  Payment pending processing</li> <li>COMPLETED  -  Payment processing completed</li> <li>FAILED  -  Payment process failed</li></ul>
     */
    paymentStatus?: string;
    /**
     * Details of the payment status.
     */
    statusDetails?: Array<HostedPaymentStatusDetails>;
    /**
     * The Unique Identifier of the payment created with the `Institution`.
     */
    institutionPaymentId?: string;
    /**
     * The Unique Identifier provided by TPP in the Payment request to identify the payment.
     */
    paymentLifecycleId?: string;
    /**
     * A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.
     */
    paymentIdempotencyId?: string;
    /**
     * The payment reference or description. Limited to a maximum of 18 characters for UK institutions.
     */
    reference?: string;
    contextType?: PaymentContextTypeResponse;
    type?: PaymentTypeResponse;
    payee?: PayeeDetailsResponse;
    payer?: PayerDetailsResponse;
    amount?: AmountDetailsResponse;
}
export namespace HostedPayment {
}


